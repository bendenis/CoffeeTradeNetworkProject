for(i in 1:d){
array = c(array[2:n],array[1])
}
print(array)
n = 5
d = 5
array = seq(n)
print(array)
for(i in 1:d){
array = c(array[2:n],array[1])
}
print(array)
n = 6
d = 6
array = seq(n)
print(array)
for(i in 1:d){
array = c(array[2:n],array[1])
}
print(array)
n = 6
d = 3
array = seq(n)
print(array)
for(i in 1:d){
array = c(array[2:n],array[1])
}
print(array)
n = 100
d = 3
array = seq(n)
print(array)
for(i in 1:d){
array = c(array[2:n],array[1])
}
print(array)
n = 100
d = 70
array = seq(n)
print(array)
for(i in 1:d){
array = c(array[2:n],array[1])
}
print(array)
n = 100
d = 100
array = seq(n)
print(array)
for(i in 1:d){
array = c(array[2:n],array[1])
}
print(array)
d = 1
n = 100
d = 1
array = seq(n)
print(array)
for(i in 1:d){
array = c(array[2:n],array[1])
}
print(array)
n = 100
d = 99
array = seq(n)
print(array)
for(i in 1:d){
array = c(array[2:n],array[1])
}
print(array)
vec = c(1,1,2,2,2,3,4,5,6,7,8)
table(vec)
table(vec)[1]
table(vec)
which.max(table(vec))
vec = c(1,1,1,2,2,2,3,4,5,6,7,8)
which.max(table(vec))
table(vec)
which.max(table(vec))
frequency(vec)
vec
?frequency
count(vec)
summarise(vec, n())
summarise(data.frame(vec), n())
table(vec)
which.max(table(vec))
max(table(vec))
which.max(table(vec))
class(which.max(table(vec)))
typeof(which.max(table(vec)))
names(which.max(table(vec)))
as.numeric(names(which.max(table(vec))))
32
32.0
double(32)
as.numeric(32)
as.double(32)
print(32)
print(32.0)
print(as.character(32.0))
print(as.character(32.1))
print(32.1)
round(32,digits = 2)
round(32,digits = 3)
?round
round(32, signif = 3)
round(32, signif = 2)
signif(32)
signif(32,2)
signif(32,3)
signif(32,4)
trunc(32.0)
signif(32.0)
round(32.0, 5)
forma(32.0)
format(32.0)
format(32.0, nsmall = 2)
format(32.0, nsmall = 1)
?format
install.packages("randomForest")
?train
library(caret)
install.packages("caret")
?train
library(caret)
?train
?caret
library(caret)
?caret
?trainControl
?setdiff()
?union
v1 = c(1,2,3)
v2 = c(2,3,4)
union(v1,v2)
setdiff(v1,v2)
intersect(v1,v2)
setequal(v1,v2)
?setdiff
?diff
?bwplot
?lattice
?utils
?round
?format
format(9, nsmall = 1)
is.integer(4.5)
7%3
7%%3
format(9, nsmall = 1)
format(as.integer(9), nsmall = 1)
format(as.integer(9), nsmall = 2)
as.numeric(9)
v = c(10,40,30,50,20,10,40,30,50,20,1,2,3,4,5,6,7,8,9,10)
f = c(1,2,3,4,5,6,7,8,9,10,10,40,30,50,20,10,40,30,50,20)
S = c()
for(i in 1:length(v)){
S = c(S,rep(v[i],f[i]))
}
med = as.integer(median(S))
upper = S[S > med]
lower = S[S < med]
q3 = as.integer(median(upper))
q1 = as.integer(median(lower))
iqr = as.numeric(q3 - q1)
answer = format(iqr, nsmall = 1)
answer
q3
q1
med
IQR(v)
IQR(S)
quantile(S,0.25)
quantile(S,0.75)
9-4
q3
q1
S%%2
length(S)
length(S) %% 2
if(length(S) %% 2 == 1){
q3 = quantile(S,0.75)
q1 = quantile(S,0.25)
iqr = as.numeric(q3 - q1)
answer = format(iqr, nsmall = 1)
}else{
med = as.integer(median(S))
upper = S[S > med]
lower = S[S < med]
q3 = as.integer(median(upper))
q1 = as.integer(median(lower))
iqr = as.numeric(q3 - q1)
answer = format(iqr, nsmall = 1)
}
answer
v = c(10,40,30,50,20)
f = c(1,2,3,4,5)
S = c()
for(i in 1:length(v)){
S = c(S,rep(v[i],f[i]))
}
if(length(S) %% 2 == 1){
q3 = quantile(S,0.75)
q1 = quantile(S,0.25)
iqr = as.numeric(q3 - q1)
answer = format(iqr, nsmall = 1)
}else{
med = as.integer(median(S))
upper = S[S > med]
lower = S[S < med]
q3 = as.integer(median(upper))
q1 = as.integer(median(lower))
iqr = as.numeric(q3 - q1)
answer = format(iqr, nsmall = 1)
}
answer
S
IQR(S)
answer
length(S) %% 2
q3
q1
med = as.integer(median(S))
upper = S[S > med]
lower = S[S < med]
q3 = as.integer(median(upper))
q1 = as.integer(median(lower))
iqr = as.numeric(q3 - q1)
iqr
as.integer(median(S))
S
as.integer(median(S))
S[-30]
S
order(S)
S[order(S)]
length(S)
S[order(S)][1:length(S)/2]
S[order(S)][1:(length(S)/2)]
S[order(S)][(length(S)/2):length(S)]
S
IQR(S)
answer
vecotr("numeric",5)
?vector
vector(mode = "numeric",5)
?lubridate
?interval
ymd(13/1/1)
library(lubridate)
ymd(13/1/1)
ymd(2013-1-1)
ymd('2013-1-1')
ymd('2014-1-1')
ymd('2014-1-1') - ymd('2013-1-1')
diff = ymd('2014-1-1') - ymd('2013-1-1')
diff
attributes(diff)
diff$days
diff$units
diff
print(diff)
diff*2
diff
diff >1
?poly
?ts
dir()
?dir()
ls()
?ls
?dir()
list.files()
?seq
?rm
rm
remove
rm == remove
rm() == remove()
?ts
?ts.plot()
pairs()
?BIC()
?tempfile()
tempfile()
methods(class="ts")
methods(class="xts")
methods(class="zoo")
library(xts)
methods(class="xts")
####Get Natural Gas Trade Data ####
library(tidyverse)
source("/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/Project/DataFormating/get_Comtrade.R")
## download the data for each country into a list of separate data frames.
## discard empty data frames (API returned no results)
## combine all separate datasets into one
gas_data = lapply(1:length(country_id), function(i) get_Comtrade(r = country_id[i], cc = "271111%2C271121"))
dt = gas_data[!is.na(gas_data)]
DT = rbind(dt[[1]],dt[[2]])
for(i in 3:length(dt)){
DT = rbind(DT,dt[[i]])
}
colnames(DT) = str_replace_all(names(DT),"\\.","_")
## write the combined dataset to a csv file:
## select columns of interest and filter rows where exporter or importer was 'world':
## write the clean dataset to a csv file:
write.csv(DT, file = "/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/Project/Data/gas_trade.csv")
DTT = DT %>% select(Reporter,Partner,Trade_Value__US__,Netweight__kg_,
Reporter_ISO, Partner_ISO, Commodity, Year) %>% filter(Partner != "World", Reporter != "World")
write.csv(DTT, file = "/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/Project/Data/clean_gas_trade.csv")
DT
dt
gas_data
get_Comtrade(r = country_id[1], cc = "271111%2C271121")
get_Comtrade(r = country_id[2], cc = "271111%2C271121")
get_Comtrade(r = country_id[101], cc = "271111%2C271121")
get_Comtrade(r = country_id[102], cc = "271111%2C271121")
get_Comtrade(r = country_id[103], cc = "271111%2C271121")
all_countries
country_id
get_Comtrade(r = country_id[246], cc = "271111%2C271121")
get_Comtrade(r = country_id[200], cc = "271111%2C271121")
get_Comtrade(r = country_id[100], cc = "271111%2C271121")
get_Comtrade(r = country_id[101], cc = "271111%2C271121")
get_Comtrade(r = country_id[102], cc = "271111%2C271121")
gas_data = lapply(1:101, function(i) get_Comtrade(r = country_id[i], cc = "271111%2C271121"))
dt = gas_data[!is.na(gas_data)]
DT = rbind(dt[[1]],dt[[2]])
for(i in 3:length(dt)){
DT = rbind(DT,dt[[i]])
}
colnames(DT) = str_replace_all(names(DT),"\\.","_")
write.csv(DT, file = "/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/Project/Data/gas_trade.csv")
DTT = DT %>% select(Reporter,Partner,Trade_Value__US__,Netweight__kg_,
Reporter_ISO, Partner_ISO, Commodity, Year) %>% filter(Partner != "World", Reporter != "World")
write.csv(DTT, file = "/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/Project/Data/clean_gas_trade.csv")
DTT$Reporter
unique(DTT$Reporter)
country_id
all_countries
get_Comtrade(r = country_id[102], cc = "271111%2C271121")
length(country_id)
length(country_id)/3
84*3
gas_data = lapply(1:86, function(i) get_Comtrade(r = country_id[i], cc = "271111%2C271121"))
dt = gas_data[!is.na(gas_data)]
DT = rbind(dt[[1]],dt[[2]])
for(i in 3:length(dt)){
DT = rbind(DT,dt[[i]])
}
colnames(DT) = str_replace_all(names(DT),"\\.","_")
length(unique(DT$Reporter))
dim(dt)
length(dt)
gas_data = lapply(1:86, function(i) get_Comtrade(r = country_id[i], cc = "271111%2C271121"))
length(dt)
dt
get_Comtrade(r = country_id[102], cc = "271111%2C271121")
get_Comtrade(r = country_id[246], cc = "271111%2C271121")
all_countries
get_Comtrade(r = country_id[245], cc = "271111%2C271121")
length(gas_data)
dt = gas_data[!is.na(gas_data)]
DT = rbind(dt[[1]],dt[[2]])
for(i in 3:length(dt)){
DT = rbind(DT,dt[[i]])
}
length(dt)
dt = gas_data[!is.na(gas_data)]
length(dt)
DT = rbind(dt[[1]],dt[[2]])
for(i in 3:length(dt)){
DT = rbind(DT,dt[[i]])
}
for(i in 3:length(dt)){
print(i)
DT = rbind(DT,dt[[i]])
}
dt[45]
dim(dt[45])
dim(dt[44])
dim(DT)
DT = rbind(dt[[1]],dt[[2]])
dim(DT)
DT
gas_data[1]
gas_data[[1]]
dt[[1]]
gas_data = lapply(1:86, function(i) get_Comtrade(r = country_id[i], cc = "271111%2C271121"))
length(gas_data)
gas_data[[1]]
gas_data = lapply(1:86, function(i) get_Comtrade(r = country_id[i], cc = "271111%2C271121"))
length(gas_data)
dt = gas_data[!is.na(gas_data)]
length(dt)
dt[1]
DT = rbind(dt[[1]],dt[[2]])
for(i in 3:length(dt)){
print(i)
DT = rbind(DT,dt[[i]])
}
colnames(DT) = str_replace_all(names(DT),"\\.","_")
dim(DT)
head(DT)
gas_data = lapply(87:172, function(i) get_Comtrade(r = country_id[i], cc = "271111%2C271121"))
chunk1 = DT
gas_data = lapply(87:172, function(i) get_Comtrade(r = country_id[i], cc = "271111%2C271121"))
length(gas_data)
dt = gas_data[!is.na(gas_data)]
length(dt)
head(DT)
DT = rbind(dt[[1]],dt[[2]])
for(i in 3:length(dt)){
DT = rbind(DT,dt[[i]])
}
colnames(DT) = str_replace_all(names(DT),"\\.","_")
head(DT)
chunk2 = DT
chunk12 = rbind(chunk1,chunk2)
length(all_countries)
all_countries
length(country_id)
length(country_id)-172
gas_data = lapply(173:254, function(i) get_Comtrade(r = country_id[i], cc = "271111%2C271121"))
length(gas_data)
dt = gas_data[!is.na(gas_data)]
length(dt)
DT = rbind(dt[[1]],dt[[2]])
for(i in 3:length(dt)){
DT = rbind(DT,dt[[i]])
}
colnames(DT) = str_replace_all(names(DT),"\\.","_")
tail(chunk12)
chunk3 = DT
chunk123 = rbind(chunk12,chunk3)
DT = chunk123
write.csv(DT, file = "/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/Project/Data/gas_trade.csv")
DTT = DT %>% select(Reporter,Partner,Trade_Value__US__,Netweight__kg_,
Reporter_ISO, Partner_ISO, Commodity, Year) %>% filter(Partner != "World", Reporter != "World")
write.csv(DTT, file = "/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/Project/Data/clean_gas_trade.csv")
sugar_data = lapply(1:85, function(i) get_Comtrade(r = country_id[i], cc = "170111"))
dt = sugar_data[!is.na(sugar_data)]
length(dt)
DT = rbind(dt[[1]],dt[[2]])
for(i in 3:length(dt)){
DT = rbind(DT,dt[[i]])
}
colnames(DT) = str_replace_all(names(DT),"\\.","_")
chunk1 = DT
sugar_data = lapply(86:170, function(i) get_Comtrade(r = country_id[i], cc = "170111"))
chunk2 = DT
dt = sugar_data[!is.na(sugar_data)]
DT = rbind(dt[[1]],dt[[2]])
for(i in 3:length(dt)){
DT = rbind(DT,dt[[i]])
}
colnames(DT) = str_replace_all(names(DT),"\\.","_")
chunk2 = DT
chunk12 = rbind(chunk1,chunk2)
length(country_id)
sugar_data = lapply(171:254, function(i) get_Comtrade(r = country_id[i], cc = "170111"))
dt = sugar_data[!is.na(sugar_data)]
DT = rbind(dt[[1]],dt[[2]])
for(i in 3:length(dt)){
DT = rbind(DT,dt[[i]])
}
colnames(DT) = str_replace_all(names(DT),"\\.","_")
chunk3 = DT
chunk123 = rbind(chunk12,chunk3)
DT = chunk123
write.csv(DT, file = "/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/Project/Data/sugar_trade.csv")
DTT = DT %>% select(Reporter,Partner,Trade_Value__US__,Netweight__kg_,
Reporter_ISO, Partner_ISO, Commodity, Year) %>% filter(Partner != "World", Reporter != "World")
write.csv(DTT, file = "/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/Project/Data/clean_sugar_trade.csv")
coffee_data = lapply(1:84, function(i) get_Comtrade(r = country_id[i]))
dt = coffee_data[!is.na(coffee_data)]
DT = rbind(dt[[1]],dt[[2]])
for(i in 3:length(dt)){
DT = rbind(DT,dt[[i]])
}
colnames(DT) = str_replace_all(names(DT),"\\.","_")
head(DT)
chunk1 = DT
coffee_data = lapply(85:172, function(i) get_Comtrade(r = country_id[i]))
dt = coffee_data[!is.na(coffee_data)]
DT = rbind(dt[[1]],dt[[2]])
for(i in 3:length(dt)){
DT = rbind(DT,dt[[i]])
}
colnames(DT) = str_replace_all(names(DT),"\\.","_")
chunk2 = DT
chunk12 = rbind(chunk1,chunk2)
length(country_id)
coffee_data = lapply(173:254, function(i) get_Comtrade(r = country_id[i]))
dt = coffee_data[!is.na(coffee_data)]
DT = rbind(dt[[1]],dt[[2]])
for(i in 3:length(dt)){
DT = rbind(DT,dt[[i]])
}
colnames(DT) = str_replace_all(names(DT),"\\.","_")
chunk3 = DT
chunk123 = rbind(chunk12,chunk3)
DT = chunk123
write.csv(DT, file = "/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/Project/Data/coffee_trade.csv")
DTT = DT %>% select(Reporter,Partner,Trade_Value__US__,Netweight__kg_,
Reporter_ISO, Partner_ISO, Commodity, Year) %>% filter(Partner != "World", Reporter != "World")
write.csv(DTT, file = "/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/Project/Data/clean_coffee_trade.csv")
qqnorm(rcauchy(100))
qqnorm(rcauchy(1000))
qqnorm(rcauchy(10000))
qqnorm(rcauchy(10000) + rnorm(1000))
setwd("~/Box Sync/UM Fall 2017/SI 608/CoffeeTradeNetworkProject")
