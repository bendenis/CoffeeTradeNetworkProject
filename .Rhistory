V(coffeeG10)[1]
sim_ij = function(G, i, j){
set1 = neighbors(G, v =  V(G)[i], mode = "all")
set2 = neighbors(G, v =  V(G)[j], mode = "all")
inter_set = intersect(set1, set2)
#simV[1] = length(inter_set)
return(length(inter_set)/length(set1))
}
sim_ij(coffeeG10,1,1)
sim_ij(coffeeG10,1,2)
sim_ij(coffeeG10,1,200)
length(V(coffeeG10))
sim_ij = function(G, i, j){
set1 = neighbors(G, v =  V(G)[i], mode = "all")
set2 = neighbors(G, v =  V(G)[j], mode = "all")
inter_set = intersect(set1, set2)
sim = length(inter_set)/length(set1)
return(sim)
}
lapply(1:207, sim_ij(1,))
lapply(1:207, sim_ij(coffeeG10, i = 1))
lapply(1:207, function(j) sim_ij(coffeeG10, i = 1, j))
unlist(lapply(1:207, function(j) sim_ij(coffeeG10, i = 1, j)))
simV = vector(mode = "numeric", length = length(V(coffeeG10))^2)
for(i in 1:207){
a = 207*(i-1) + 1
b = 207*i
sim_vals = unlist(lapply(1:207, function(j) sim_ij(coffeeG10, i, j)))
simV[a:b] = sim_vals
}
dim(simV) = c(207,207)
heatmap(simV)
View(simV)
View(simM)
sim_ij = function(G, i, j){
set1 = neighbors(G, v =  V(G)[i], mode = "all")
set2 = neighbors(G, v =  V(G)[j], mode = "all")
inter_set = intersect(set1, set2)
sim = length(inter_set)/(length(set1)+length(set2))
return(sim)
}
simV = vector(mode = "numeric", length = length(V(coffeeG10))^2)
for(i in 1:207){
a = 207*(i-1) + 1
b = 207*i
sim_vals = unlist(lapply(1:207, function(j) sim_ij(coffeeG10, i, j)))
simV[a:b] = sim_vals
}
dim(simV) = c(207,207)
heatmap(simV)
filter
lm
?hclust
hclust(simM)
?dist
class(simM)
dist(c(1,2,3),c(3,4,5))
dist(c(c(1,2,3),c(3,4,5)))
class(dist(c(c(1,2,3),c(3,4,5))))
as.dist(simM)
hclust(as.dist(simM))
hcl1 = hclust(as.dist(simM))
plot(hcl1)
hcl1
?cut
cut(hcl1, breaks = 2)
cut(hcl1, breaks = 3)
?cutree
cutree(hcl1, k = 2)
cutree(hcl1, k = 3)
cutree(hcl1, k = 4)
clusts = cutree(hcl1, k = 4)
plot(coffeeG10)
lay3 = layout.kamada.kawai(coffeeG10)
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5,
edge.arrow.size = 0.2, edge.width = 0.2)
lay3 = layout.circle(coffeeG10)
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5,
edge.arrow.size = 0.2, edge.width = 0.2)
lay3 = layout.fruchterman.reingold(coffeeG10)
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5,
edge.arrow.size = 0.2, edge.width = 0.2)
lay3 = layout.davidson.harel(coffeeG10)
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5,
edge.arrow.size = 0.2, edge.width = 0.2)
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5, vertex.size = degree(coffeeG10, mode = "in"),
edge.arrow.size = 0.2, edge.width = 0.2)
lay3 = layout.drl(coffeeG10)
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5, vertex.size = degree(coffeeG10, mode = "in"),
edge.arrow.size = 0.2, edge.width = 0.2)
lay3 = layout.drl(coffeeG10)
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5, vertex.size = betweenness(coffeeG10, mode = "in"),
edge.arrow.size = 0.2, edge.width = 0.2)
lay3 = layout.drl(coffeeG10)
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5, vertex.size = betweenness(coffeeG10),
edge.arrow.size = 0.2, edge.width = 0.2)
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5, vertex.size = degree(coffeeG10, mode = "out"),
edge.arrow.size = 0.2, edge.width = 0.2)
head(coffee_trade_2010)
lay3 = layout.grid(coffeeG10)
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5, vertex.size = degree(coffeeG10, mode = "out"),
edge.arrow.size = 0.2, edge.width = 0.2)
lay3 = layout.grid(coffeeG10)
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5,
edge.arrow.size = 0.2, edge.width = 0.2)
?plot.igraph
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5,
edge.arrow.size = 0.2, edge.width = 0.2, mark.groups = clusts)
lay3 = layout.davidson.harel(coffeeG10)
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5,
edge.arrow.size = 0.2, edge.width = 0.2, mark.groups = clusts)
lay3 = layout_nicely(coffeeG10)
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5,
edge.arrow.size = 0.2, edge.width = 0.2, mark.groups = clusts)
lay3 = layout_with_fr(coffeeG10)
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5,
edge.arrow.size = 0.2, edge.width = 0.2, mark.groups = clusts)
plot(hcl1)
attributes(hcl1)
hcl1$order
hcl1$height
hcl1$labels
hcl1$dist.method
?hclust
?set_vertex_attr
set_vertex_attr(coffeeG10, "cluster", index = V(coffeeG10), clusts)
attributes(coffeeG10)
?similarity()
simM = similarity(coffeeG10, vids = V(coffeeG10), mode = "all", method = "invlogweighted")
hcl1 = hclust(as.dist(simM))
plot(hcl1)
clusts = cutree(hcl1, k = 4)
set_vertex_attr(coffeeG10, "cluster", index = V(coffeeG10), clusts)
lay3 = layout_with_fr(coffeeG10)
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5,
edge.arrow.size = 0.2, edge.width = 0.2)
lay3 = layout.davidson.harel(coffeeG10)
plot(coffeeG10, vertex.color = clusts, layout = lay3,
vertex.label.cex = 0.5,
edge.arrow.size = 0.2, edge.width = 0.2)
hcl1
hcl1$labels
set_vertex_attr(coffeeG10, "cluster", index = V(coffeeG10), clusts)
?V
V(coffeeG10)
V(coffeeG10)[0]
V(coffeeG10)[1]
hcl1$order
hcl1$labels
V(coffeeG10)
V(coffeeG10)[hcl1$order]
clusts
hcl1$labels
data.frame(clust = hcl1$labels, name = V(coffeeG10)[hcl1$order])
V(coffeeG10)[hcl1$order]
attributes(V(coffeeG10)[hcl1$order])
attributes(V(coffeeG10)[hcl1$order])$names
data.frame(clust = hcl1$labels, name = V(coffeeG10)[hcl1$order]
)
data.frame(clust = hcl1$labels, name = attributes(V(coffeeG10)[hcl1$order])$names)
data.frame(clusts, name = attributes(V(coffeeG10)[hcl1$order])$names)
data.frame(clusts, name = attributes(V(coffeeG10))$names)
dff = data.frame(clusts, name = attributes(V(coffeeG10))$names)
dff %>% filter(clusts = 1)
dff %>% filter(clusts == 1)
dff %>% filter(clusts == 2)
dff %>% filter(clusts == 3)
dff %>% filter(clusts == 4)
dff %>% filter(clusts == 1)
simM = similarity(coffeeG10, vids = V(coffeeG10), mode = "all", method = "dice")
hcl1 = hclust(as.dist(simM))
clusts = cutree(hcl1, k = 4)
dff = data.frame(clusts, name = attributes(V(coffeeG10))$names)
dff %>% filter(clusts == 4)
dff %>% filter(clusts == 3)
dff %>% filter(clusts == 1)
dff %>% filter(clusts == 2)
simM = similarity(coffeeG10, vids = V(coffeeG10), mode = "all", method = "jaccard")
hcl1 = hclust(as.dist(simM))
clusts = cutree(hcl1, k = 4)
dff = data.frame(clusts, name = attributes(V(coffeeG10))$names)
dff %>% filter(clusts == 2)
dff %>% filter(clusts == 1)
dff
head(dff)
coffee_trade_2010$clust = clusts
coffee_trade_2010 %>% filter(clust == 1)
coffee_trade_2010 %>% filter(clust == 1) %>% summary
coffee_trade_2010 %>% filter(clust == 2) %>% summary()
library(igraph)
library(stringr)
library(purrr)
library(GGally)
library(dplyr)
coffee_trade_2010 = read.csv("Data/Decorated/coffeeG10measures.csv")
coffeeG10 = read_graph("Data/iGraphs/coffeeG10.gml", format = "gml")
E(coffeeG10)[1]
adjM = as.matrix(get.adjacency(coffeeG10))
vM = adjM
dim(vM) = c(42849,1)
partner = rep(names(adjM[,1]),207)
df = data.frame(export = vM[,1], importer = rep(names(adjM[,1]),207), exporter = rep(names(adjM[,1]),each = 207))
make_diffs = function(mydata, var){
vec = vector(mode = "numeric", length = nrow(mydata)^2)
for(i in 1:nrow(mydata)){
diffs = unlist(lapply(mydata[var], function(x) mydata[i,var] - x))
a = 207*(i-1) + 1
b = 207*i
vec[a:b] = diffs
}
return(vec)
}
closeness_centrality_diffs = make_diffs(coffee_trade_2010, 'closeness_centrality')
df$closeness_centrality_diffs = closeness_centrality_diffs
indegree_centrality_diffs = make_diffs(coffee_trade_2010, 'indegree_centrality')
df$indegree_centrality_diffs = indegree_centrality_diffs
outdegree_centrality_diffs = make_diffs(coffee_trade_2010, 'outdegree_centrality')
df$outdegree_centrality_diffs= outdegree_centrality_diffs
betweenness_centrality_diffs = make_diffs(coffee_trade_2010, 'betweenness_centrality')
df$betweenness_centrality_diffs = betweenness_centrality_diffs
head(df)
df %>% select(export, closeness_centrality_diffs,
indegree_centrality_diffs, outdegree_centrality_diffs,
betweenness_centrality_diffs) %>%
ggpairs(mapping = aes(col = export, alpha = 0.3))
library(ggplot2)
df %>% select(export, closeness_centrality_diffs,
indegree_centrality_diffs, outdegree_centrality_diffs,
betweenness_centrality_diffs) %>%
ggpairs(mapping = aes(col = export, alpha = 0.3))
?svm
df %>% select(export, closeness_centrality_diffs,
indegree_centrality_diffs, outdegree_centrality_diffs,
betweenness_centrality_diffs) %>%
ggpairs(mapping = aes(col = export, alpha = 0.3))
df %>% select(export, closeness_centrality_diffs,
indegree_centrality_diffs, outdegree_centrality_diffs,
betweenness_centrality_diffs)
df$export = as.factor(df$export)
df %>% select(export, closeness_centrality_diffs,
indegree_centrality_diffs, outdegree_centrality_diffs,
betweenness_centrality_diffs) %>%
ggpairs(mapping = aes(col = export, alpha = 0.3))
?tmap
library(tmap)           #visualization of spacial polygon objects, and raster objects
?tmap
world = data("World")
world
tmap(world)
print(world)
world_map = tm_shape(world)
world_map
world_map = tm_shape(World)
world_map
qtm(world_map)
data(World)
world_map = tm_shape(World)
world_map
world_map = tm_shape(World) + tm_borders()
world_map
str(World)
World$name
coffee_trade_2010$country
as.character(coffee_trade_2010$country)
str_match(coffee_trade_2010$country[1],World$name)
str_match(as.character(coffee_trade_2010$country[1]),World$name)
str_match(as.character(coffee_trade_2010$country[1]),as.character(World$name))
str_detect(as.character(coffee_trade_2010$country[1]),as.character(World$name))
which(str_detect(as.character(coffee_trade_2010$country[1]),as.character(World$name)))
world_map = tm_shape(World) + tm_borders() + tmap_leaflet()
tmap_leaflet(world_map)
?stringdist
library(stringdist)
?stringdistmatrix()
idx = vector(mode = "numeric", length = 207)
for(i in 1:207){
idx[i] = which(str_detect(as.character(coffee_trade_2010$country[i]),as.character(World$name)))
}
for(i in 1:207){
which(str_detect(as.character(coffee_trade_2010$country[i]),as.character(World$name)))
}
idx = vector(mode = "numeric", length = 207)
for(i in 1:207){
match = which(str_detect(as.character(coffee_trade_2010$country[i]),as.character(World$name)))
print(match)
}
for(i in 1:207){
match = which(str_detect(as.character(coffee_trade_2010$country[i]),as.character(World$name)))
print(is.numeric(match))
}
for(i in 1:207){
match = which(str_detect(as.character(coffee_trade_2010$country[i]),as.character(World$name)))
idx[i] = match
}
for(i in 1:207){
match = which(str_detect(as.character(coffee_trade_2010$country[i]),as.character(World$name)))
print(length(match))
}
idx = vector(mode = "numeric", length = 207)
for(i in 1:207){
match = which(str_detect(as.character(coffee_trade_2010$country[i]),as.character(World$name)))
if(length(match) = 0){
idx[i] = NA
}else{
idx[i] = i
}
for(i in 1:207){
match = which(str_detect(as.character(coffee_trade_2010$country[i]),as.character(World$name)))
if(length(match) == 0){
idx[i] = NA
}else{
idx[i] = i
}
idx
idx[idx == NA]
idx[]
idx = vector(mode = "numeric", length = 207)
for(i in 1:207){
match = which(str_detect(as.character(coffee_trade_2010$country[i]),as.character(World$name)))
if(length(match) == 0){
idx[i] = NA
}else{
idx[i] = match
}
idx = vector(mode = "numeric", length = 207)
for(i in 1:207){
match = which(str_detect(as.character(coffee_trade_2010$country[i]),as.character(World$name)))
if(length(match) == 0){
idx[i] = NA
}else{
idx[i] = match[1]
}
idx
idx == NA
is.na(idx)
coffee_trade_2010$country[is.na(idx)]
World$iso_a3
World$name
coffee_trade_2010 = read.csv("Data/Decorated/coffeeG10measures.csv")
head(coffee_trade_2010)
coffee_trade_2010$country
clean_coffee_trade = read.csv("Data/Cleaned/clean_coffee_trade.csv")
head(clean_coffee_trade)
clean_coffee_trade %>% group_by(Reporter) %>% select(Reporter_ISO)
names(clean_coffee_trade)
str(clean_coffee_trade)
clean_coffee_trade = read.csv("Data/Cleaned/clean_coffee_trade.csv", stringsAsFactors = F)
clean_coffee_trade %>% group_by(Reporter) %>% select(Reporter_ISO)
clean_coffee_trade %>% select(Reporter_ISO)
clean_coffee_trade %>% select(Reporter,Reporter_ISO)
table(clean_coffee_trade %>% select(Reporter,Reporter_ISO))
clean_coffee_trade %>% select(Reporter,Reporter_ISO)
clean_coffee_trade %>% select(Reporter,Reporter_ISO) %>% group_by(Reporter_ISO)
clean_coffee_trade %>% select(Reporter,Reporter_ISO) %>% group_by(Reporter)
?group_by
clean_coffee_trade %>% select(Reporter,Reporter_ISO) %>% group_by(Reporter) %>% summarise(n())
clean_coffee_trade %>% select(Reporter,Reporter_ISO) %>% group_by(Reporter) %>% summarise(n(), Reporter_ISO)
clean_coffee_trade %>% select(Reporter,Reporter_ISO) %>% group_by(Reporter)
DT = read.csv("/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/Project/Data/coffee_trade.csv")
DT = read.csv("/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/Project/Data/Cleaned/coffee_trade.csv")
DT = read.csv("/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/CoffeeTradeNetworkProject/Data/Cleaned/coffee_trade.csv")
DT = read.csv("/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/CoffeeTradeNetworkProject/Data/Scraped/coffee_trade.csv")
head(DT)
unique(DT$Reporter)
DTT = DT %>% select(Reporter,Partner,Trade_Value__US__,Netweight__kg_,
Reporter_ISO, Partner_ISO, Commodity, Year) %>% filter(Partner != "World", Reporter != "World",
Partner != "EU-28", Reporter != "EU-28")
head(DTT)
library(stringr)
library(tidyverse)
str_c(DTT$Reporter,DTT$Reporter_ISO, sep = ":")
DTT$Reporter = str_c(DTT$Reporter,DTT$Reporter_ISO, sep = ":")
head(DTT)
DTT$Partner = str_c(DTT$Partner,DTT$Partner_ISO, sep = ":")
write.csv(DTT, file = "/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/CoffeeTradeNetworkProject/DataFormating/Cleaned/clean_coffee_trade.csv")
write.csv(DTT, file = "/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/CoffeeTradeNetworkProject/Data/Cleaned/clean_coffee_trade.csv")
DT = read.csv("/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/CoffeeTradeNetworkProject/Data/Scraped/sugar_trade.csv")
head(DT)
DTT = DT %>% select(Reporter,Partner,Trade_Value__US__,Netweight__kg_,
Reporter_ISO, Partner_ISO, Commodity, Year) %>% filter(Partner != "World", Reporter != "World",
Partner != "EU-28", Reporter != "EU-28")
DTT$Reporter = str_c(DTT$Reporter,DTT$Reporter_ISO, sep = ":")
DTT$Partner = str_c(DTT$Partner,DTT$Partner_ISO, sep = ":")
head(DTT)
write.csv(DTT, file = "/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/CoffeeTradeNetworkProject/Data/Cleaned/clean_sugar_trade.csv")
DT = read.csv("/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/CoffeeTradeNetworkProject/Data/Scraped/gas_trade.csv")
DTT = DT %>% select(Reporter,Partner,Trade_Value__US__,Netweight__kg_,
Reporter_ISO, Partner_ISO, Commodity, Year) %>% filter(Partner != "World", Reporter != "World",
Partner != "EU-28", Reporter != "EU-28")
DTT$Reporter = str_c(DTT$Reporter,DTT$Reporter_ISO, sep = ":")
DTT$Partner = str_c(DTT$Partner,DTT$Partner_ISO, sep = ":")
head(DTT)
write.csv(DTT, file = "/Users/bendenisshaffer/Box Sync/UM Fall 2017/SI 608/CoffeeTradeNetworkProject/Data/Cleaned/clean_gas_trade.csv")
rm(DT)
rm(DTT)
rm(df)
rm(dff)
coffee_trade_2010 = read.csv("Data/Decorated/coffeeG10measures.csv")
head(coffee_trade_2010)
str_split(coffee_trade_2010$country,":")
?str_split
str_extract(coffee_trade_2010$country,":[A-Z]*")
str_extract(coffee_trade_2010$country,"[A-Z]*")
str_extract(coffee_trade_2010$country,":[A-Z]*")
str_replace(str_extract(coffee_trade_2010$country,":[A-Z]*"),":","")
coffee_trade_2010$ISO = str_replace(str_extract(coffee_trade_2010$country,":[A-Z]*"),":","")
head(coffee_trade_2010)
World$iso_a3
?merge()
class(World)
sp@data
World@data
?join
library(plyr)
coffee_trade_2010$iso_a3 = str_replace(str_extract(coffee_trade_2010$country,":[A-Z]*"),":","")
join(World@data,coffee_trade_2010, by = 'iso_a3')
World@data = join(World@data,coffee_trade_2010, by = 'iso_a3')
library(tmap)
?tm_fill()
head(coffee_trade_2010)
simM = similarity(coffeeG10, vids = V(coffeeG10), mode = "all", method = "jaccard")
library(igraph)
library(stringr)
library(purrr)
library(GGally)
library(dplyr)
coffeeG10 = read_graph("Data/iGraphs/coffeeG10.gml", format = "gml")
simM = similarity(coffeeG10, vids = V(coffeeG10), mode = "all", method = "jaccard")
hcl1 = hclust(as.dist(simM))
clusts = cutree(hcl1, k = 4)
set_vertex_attr(coffeeG10, "cluster", index = V(coffeeG10), clusts)
coffee_trade_2010$clust = clusts
coffee_trade_2010 = read.csv("Data/Decorated/coffeeG10measures.csv")
coffeeG10 = read_graph("Data/iGraphs/coffeeG10.gml", format = "gml")
simM = similarity(coffeeG10, vids = V(coffeeG10), mode = "all", method = "jaccard")
hcl1 = hclust(as.dist(simM))
clusts = cutree(hcl1, k = 4)
length(clusts)
nrow(coffee_trade_2010)
coffee_trade_2010 = read.csv("Data/Decorated/coffeeG10measures.csv")
nrow(coffee_trade_2010)
coffeeG10 = read_graph("Data/iGraphs/coffeeG10.gml", format = "gml")
simM = similarity(coffeeG10, vids = V(coffeeG10), mode = "all", method = "jaccard")
hcl1 = hclust(as.dist(simM))
clusts = cutree(hcl1, k = 4)
length(clusts)
set_vertex_attr(coffeeG10, "cluster", index = V(coffeeG10), clusts)
coffee_trade_2010$clust = clusts
coffee_trade_2010$iso_a3 = str_replace(str_extract(coffee_trade_2010$country,":[A-Z]*"),":","")
head(coffee_trade_2010)
World@data = join(World@data,coffee_trade_2010, by = 'iso_a3')
data(World)
World@data = join(World@data,coffee_trade_2010, by = 'iso_a3')
?tm_fill
world_map = tm_shape(World) + tm_borders() + tm_fill("clust")
world_map
world_map = tm_shape(World) + tm_borders() + tm_fill("indegree_centrality")
world_map
world_map = tm_shape(World) + tm_borders() + tm_fill("outdegree_centrality")
world_map
world_map = tm_shape(World) + tm_borders() + tm_fill("total_imported")
world_map
world_map = tm_shape(World) + tm_borders() + tm_fill("total_exported")
world_map
world_map = tm_shape(World) + tm_borders() + tm_fill("betweenness_centrality")
world_map
world_map = tm_shape(World) + tm_borders() + tm_fill("closeness_centrality")
world_map
world_map = tm_shape(World) + tm_borders() + tm_fill("mean_terms")
world_map
world_map = tm_shape(World) + tm_borders() + tm_fill("clust")
world_map
?similarity
simM = similarity(coffeeG10, vids = V(coffeeG10), mode = "all", method = "dice")
hcl1 = hclust(as.dist(simM))
clusts = cutree(hcl1, k = 4)
set_vertex_attr(coffeeG10, "cluster", index = V(coffeeG10), clusts)
coffee_trade_2010$clust = clusts
data(World)
coffee_trade_2010$iso_a3 = str_replace(str_extract(coffee_trade_2010$country,":[A-Z]*"),":","")
World@data = join(World@data,coffee_trade_2010, by = 'iso_a3')
world_map = tm_shape(World) + tm_borders() + tm_fill("clust")
world_map
tmap_leaflet()
tmap_leaflet(world_map)
world_map = tm_shape(World) + tm_borders() + tm_fill("closeness_centrality")
world_map
tmap_leaflet(world_map)
world_map = tm_shape(World) + tm_borders() + tm_fill("indegree_centrality")
tmap_leaflet(world_map)
coffee_trade_2010
coffee_trade_2010 %>% arrange(desc(indegree_centrality))
coffee_trade_2010 %>% arrange(desc(indegree_centrality)) %>% top_n(10)
degree(coffeeG10, mode = "in")
degree(coffeeG10, mode = "in") %>% sort()
centr_degree(coffeeG10, mode = "in")
